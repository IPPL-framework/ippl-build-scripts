#!/bin/bash
P=ippl
build_type=${build_type:-serial}
ENABLE_FFT=${ENABLE_FFT:-ON}
ENABLE_SOLVERS=${ENABLE_SOLVERS:-ON}
ENABLE_ALPINE=${ENABLE_ALPINE:-ON}
ENABLE_UNIT_TESTS=${ENABLE_UNIT_TESTS:-ON}
NJOBS=8
trap "itb_exit" EXIT

CXXFLAGS=""

build_mode=${build_mode:-Release}
compiler=${compiler:-"$(which gcc)"}

if [[ "$build_type" == "cuda" ]]; then
    echo "Build Cuda mode."
elif [[ "$build_type" == "serial" ]]; then
    echo "Build serial mode."
elif [[ "$build_type" == "openmp" ]]; then
    echo "Build OpenMP mode."
else
    echo "Wrong build type."
fi

cd "${ITB_SRC_DIR}" || exit "${ITB_ARG_ERR}"
if [ -d "ippl" ] 
then
    echo "Found existing IPPL source directory"
else
    echo "Clone ippl repo ... "
    if [ -n "$USE_SSH" ]; then
        git clone git@github.com:IPPL-framework/ippl.git
    else
        git clone https://github.com/IPPL-framework/ippl.git
    fi
fi

mkdir -p "${ITB_SRC_DIR}/$P/build_$build_type" && cd "$_" || exit "${ITB_ARG_ERR}"

cmake \
    -DCMAKE_BUILD_TYPE="${build_mode}" \
    -DCMAKE_INSTALL_PREFIX="${ITB_PREFIX}" \
    -DCMAKE_CXX_EXTENSIONS=OFF \
    -DENABLE_TESTS=ON \
    -DENABLE_UNIT_TESTS="${ENABLE_UNIT_TESTS}" \
    -DENABLE_FFT="${ENABLE_FFT}" \
    -DENABLE_SOLVERS="${ENABLE_SOLVERS}" \
    -DENABLE_ALPINE="${ENABLE_ALPINE}" \
    -DCMAKE_CXX_COMPILER="${compiler}" \
    -DCMAKE_CXX_FLAGS="$CXXFLAGS" \
    $ADDITIONAL_CMAKE_FLAGS \
    "${ITB_SRC_DIR}/$P"

# compile & install
make -j ${NJOBS}
make install
